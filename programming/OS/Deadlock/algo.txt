Step 1: Start
Step 2: Declare n, m, i, j, k f[n], ans[n], ind j= 0;
Step 3: set n <- 5, m <- 3.
Step 4: Declare alloc[5][3], max[5][3], avail[3]
Step 5: Repeat unitl k < n 
     5.1: set f[k] <- 0
     5.2: k <- k + 1

Step 6: set need[n][m]
Step 7: Repeat unitl i < n
     7.1: Repeat until j < m
        7.1.1: set need[i][j] <- max[i][j] - alloc[i][j]
        7.1.2: j <- j + 1
     7.2: i <- i + 1

Step 8: set k <- 0
Step 9: Repeat until k < 5
     9.1: Repeat until i < n 
        9.1.1: if f[i] == 0
                set flag <- 0

            9.1.1.1: Repeat  j < m
            9.1.1.2: If need[i][j] > avail[j]
                        set flag <- 1
                        break
            9.1.1.3: if flag == 0
                        set ans[ind++] <- i
                        9.1.1.4: set y <- 0; Repeat until y < m
                              9.1.1.4.1: set avail[y] <-  avail[y] + alloc[i][y]
                              9.1.1.4.2: y <- y + 1
        9.1.2: i <- i + 1
     9.2: k <- k + 1

Step 10: Display "Following is the SAFE Sequence"
Step 11: set i <- 0
Step 12: Repeat until i < n - 1
     12.1: Display "P" + ans[i]
     12.2: i <- i + 1
Step 13: "P " + ans[n - 1]
Step 14: Stop